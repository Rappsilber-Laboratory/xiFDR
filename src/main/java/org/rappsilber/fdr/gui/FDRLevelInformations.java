/*
 * Copyright 2015 Lutz Fischer <lfischer at staffmail.ed.ac.uk>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.rappsilber.fdr.gui;

import org.rappsilber.fdr.result.FDRResultLevel;
import org.rappsilber.fdr.OfflineFDR;
import org.rappsilber.fdr.result.SubGroupFdrInfo;
import org.rappsilber.fdr.utils.MiscUtils;

/**
 *
 * @author lfischer
 */
public class FDRLevelInformations extends javax.swing.JFrame {

    /**
     * Creates new form FDRLevelInformations
     */
    public FDRLevelInformations(FDRResultLevel level, String title) {
        initComponents();
        this.setTitle(title);
        javax.swing.table.DefaultTableModel tm = (javax.swing.table.DefaultTableModel) tblInfo.getModel();
        while (tm.getRowCount() >0 ) 
            tm.removeRow(0);
        
        for (Object fg: level.keySet()) {
            Object[] row = new Object[9];
            SubGroupFdrInfo sg = (SubGroupFdrInfo) level.get(fg);
            
//            // for pretty printing the FDRs what is the biggest decimal needed to display the difference between target passing and next higher fdr
//            // first we need the difference
//            double htdiff = (sg.higherFDR-sg.targteFDR)*100;
//            double ftdiff = (sg.firstPassingFDR-sg.targteFDR)*100;
//            double hldiff = (sg.higherFDR-sg.lowerFDR)*100;
//            double minDiff = htdiff;
//
//            // get the smallest difference > 0
//            if (minDiff >0) {
//                if (ftdiff >0)
//                    minDiff= Math.min(minDiff,ftdiff);
//            } else 
//                minDiff = ftdiff;
//            
//            if (minDiff > 0) {
//                if (hldiff > 0) 
//                    minDiff = Math.min(minDiff, hldiff);
//            } else {
//                minDiff = hldiff;
//            }
//            
//            // turn that into the decimal by using log10 and round that down
//            double roundingFactor = Math.round(Math.log(minDiff)/Math.log(10)-0.5);
//            
//            // we don't want to round away any digits before the dot
//            if (roundingFactor>0)
//                roundingFactor=0;
//            double normFactor = Math.pow(10, roundingFactor);
//            double higherFDR = Math.round(sg.higherFDR*100/normFactor)*normFactor;
//            double firstPassingFDR = Math.round(sg.firstPassingFDR*100/normFactor)*normFactor;
//            double lowerFDR = Math.round(sg.lowerFDR*100/normFactor)*normFactor;
//            if (roundingFactor<0)
//                roundingFactor=-roundingFactor;
            
            String formatString = MiscUtils.formatStringForPrettyPrintingRelatedValues(
                    new double[] {
                        sg.higherFDR*100, 
                        sg.lowerFDR*100, 
                        sg.targteFDR*100, 
                        sg.firstPassingFDR*100
                    },1);
            
            row[0]=sg.fdrGroupName;
            
            row[1]=sg.inputCount;
            
            row[2]=sg.targteFDR >= 1 ? "unrestricted" : sg.targteFDR * 100;
            row[3]=String.format(formatString + "%% FP",sg.firstPassingFDR*100);
            row[4]=String.format("<"+ formatString + "%% H", sg.higherFDR*100);
            row[5]=String.format(">"+ formatString + "%% L", sg.lowerFDR*100);
            
            row[6]=sg.results.size();
            row[7] = sg.filteredResult.size();
            row[8] = sg.worstAcceptedScore;
            tm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnOK = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInfo = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnOK.setText("ok");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        tblInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Group", "Input", "Target FDR", "Next FDR", "Accepted FDR", "Lower FDR", "Passed", "Filtered Result", "Worst Score"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInfo);

        jLabel1.setText("Group:");

        jTextField1.setEditable(false);
        jTextField1.setText("subgroup, that was used to calculate the fdr");
        jTextField1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Target FDR:");

        jTextField2.setEditable(false);
        jTextField2.setText("What was the requested FDR");
        jTextField2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Next FDR:");

        jTextField3.setEditable(false);
        jTextField3.setText("The next fdr-level, that was found to higher the the targed fdr");
        jTextField3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextField4.setEditable(false);
        jTextField4.setText("Taking the report factor into account, what was the actually accepted FDR");
        jTextField4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Accepted FDR:");

        jLabel5.setText("Passed:");

        jTextField5.setEditable(false);
        jTextField5.setText("How many data passed this fdr");
        jTextField5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setText("Filtered :");

        jTextField6.setEditable(false);
        jTextField6.setText("how many of the results passed also the higher level fdr");
        jTextField6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnOK))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField4)
                            .addComponent(jTextField3)
                            .addComponent(jTextField2)
                            .addComponent(jTextField1)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(66, 66, 66)
                        .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(59, 59, 59)
                        .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOK)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOKActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTable tblInfo;
    // End of variables declaration//GEN-END:variables
}
